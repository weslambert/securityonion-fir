#!/bin/bash
. /usr/sbin/so-common

# Clone repo
header "Cloning repo..."
[ -d ~/securityonion-fir ] && rm -rf ~/securityonion-fir
git clone https://github.com/weslambert/securityonion-fir

# Create FIR dir
[ -d ~/fir ] && rm -rf ~/fir
mkdir ~/fir

header "Copying web config..."
cp -av securityonion-fir/fir.conf /etc/apache2/sites-available/fir.conf
echo

# If 000-securityonion.conf does not exist, create it
if [ ! -f /etc/apache2/sites-available/000-securityonion.conf ]; then
	cp /etc/apache2/sites-available/securityonion.conf /etc/apache2/sites-available/000-securityonion.conf
	a2ensite 000-securityonion.conf
fi

# Get domain
echo "Please specify a domain to use to access FIR (Example: fir.example.com) and press [ENTER]:"
read DOMAIN_NAME

# Enable FIR site
header "Enabling site..."
sed -i "s/fir.example.com/$DOMAIN_NAME/" /etc/apache2/sites-available/fir.conf
a2ensite fir.conf
echo

# Add entry in /etc/hosts
echo "127.0.0.1    $DOMAIN_NAME"

# Restart Apache
header "Restarting Apache..."
echo
service apache2 restart
  
# Pull Docker container
header "Pulling container from Docker Hub..."
docker pull wlambert/so-fir && \
echo

# Run Docker container
header "Starting Docker container..."
if docker ps -a | grep so-fir > /dev/null; then
        docker stop so-fir
        docker ps -a | grep "so-fir" | awk '{print $1}' | xargs docker rm
fi
docker run -it -d --name=so-fir -p 8001:8001 wlambert/so-fir && \
echo

# Copy DB to store locally
echo "Copying DB file(s).."
echo
docker cp so-fir:/app/FIR/db.sqlite3 ~/fir/db.sqlite3 && \
chown 1000:1000 ~/fir/db.sqlite3

# Stop container
header "Stopping container to re-apply new config..."
if docker ps -a | grep so-fir > /dev/null; then
	echo "Stopping container..."
	docker stop so-fir
	echo
	echo "Removing container..."
	docker ps -a | grep "so-fir" | awk '{print $1}' | xargs docker rm
	echo
fi
echo

# Run container again, mounting with DB hosted locally
header "Starting container..."
docker run -it -d --name=so-fir -p 8001:8001 -v ~/fir/db.sqlite3:/app/FIR/db.sqlite3 wlambert/so-fir && \
echo

# Add inital BLs/users
header "Configuring initial user(s)/config..."
docker exec -it so-fir ./manage.py loaddata incidents/fixtures/seed_data.json && \
docker exec -it so-fir ./manage.py loaddata incidents/fixtures/dev_users.json
echo

# Done
header "Configuration Complete"
echo "Done!"
echo
echo "FIR should now be accessible at https://$DOMAIN_NAME"
echo
echo "If you haven't already, make sure to run so-allow to allow an analyst access to port 443 to access FIR and other tools."
echo "Also keep in mind, if DNS is not in place for the provided domain, you will need to access the site by placing an entry in the client's host(s) file:"
echo "Ex: 127.0.0.1    $DOMAIN_NAME"
echo
